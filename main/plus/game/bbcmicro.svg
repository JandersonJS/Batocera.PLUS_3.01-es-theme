<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="211mm"
   viewBox="0 0 210 211"
   version="1.1"
   id="svg1"
   inkscape:version="1.4.2 (f4327f4, 2025-05-13)"
   sodipodi:docname="documento-1.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.71891835"
     inkscape:cx="397.12437"
     inkscape:cy="561.25984"
     inkscape:window-width="1920"
     inkscape:window-height="1009"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient4624"
       gradientUnits="userSpaceOnUse"
       x="-76.486824"
       y="845.18591"
       gradientTransform="matrix(0.95859297,0,0,0.95859297,-72.758419,-283.5599)">
      <meshrow
         id="meshrow4626">
        <meshpatch
           id="meshpatch4628">
          <stop
             path="c 17.0046,-17.0046  44.5744,-17.0046  61.5789,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4630" />
          <stop
             path="c 17.0046,17.0046  17.0046,44.5744  0,61.5789"
             style="stop-color:#00002b;stop-opacity:1"
             id="stop4632" />
          <stop
             path="c -17.0046,17.0046  -44.5744,17.0046  -61.5789,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4634" />
          <stop
             path="c -17.0046,-17.0046  -17.0046,-44.5744  -1.42109e-14,-61.5789"
             style="stop-color:#00002b;stop-opacity:1"
             id="stop4636" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Camada 1"
     inkscape:groupmode="layer"
     id="layer1">
    <g
       id="g1164"
       transform="matrix(0.79413164,0,0,0.79413164,231.50276,-301.73906)">
      <g
         id="g5926"
         transform="matrix(0.75272372,0,0,0.75272372,-71.452244,94.459516)">
        <ellipse
           cx="-173.362"
           cy="446.91315"
           fill="#ffffff"
           rx="14.949428"
           ry="11.49956"
           id="ellipse38"
           style="stroke-width:11.4996" />
        <rect
           x="-290"
           y="382.00003"
           fill="#1f0200"
           width="346.87283"
           height="348.2879"
           id="rect4"
           style="fill:#1a1a1a;stroke-width:6.52792" />
        <circle
           style="opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.975284;stroke-opacity:1"
           id="path3884"
           cx="-116.56358"
           cy="556.14392"
           r="53.189449" />
        <circle
           style="opacity:1;fill:#333333;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.963701;stroke-opacity:1"
           id="circle4308"
           cx="-116.56358"
           cy="556.14392"
           r="52.557789" />
        <circle
           style="fill:url(#meshgradient4624);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.765344;stroke-opacity:1"
           id="circle4308-6"
           cx="-116.56358"
           cy="556.14392"
           r="41.739902" />
        <circle
           style="opacity:1;fill:#cccccc;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.017;stroke-opacity:1"
           id="path4676"
           cx="-116.56358"
           cy="556.14392"
           r="36.015934" />
        <rect
           style="opacity:1;fill:#e6e6e6;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.237125;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="rect5096"
           width="11.184517"
           height="16.993769"
           x="-290.22403"
           y="468.77814"
           ry="0" />
        <rect
           style="opacity:1;fill:#e6e6e6;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.237125;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="rect5276"
           width="11.184517"
           height="16.993769"
           x="45.569756"
           y="468.77814"
           ry="0" />
        <rect
           style="opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.539905;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="rect5319"
           width="37.557747"
           height="89.960991"
           x="-135.34245"
           y="632.67786"
           ry="17.385099" />
        <rect
           style="opacity:1;fill:#333333;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.515782;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="rect5425"
           width="34.692417"
           height="88.882492"
           x="-133.90979"
           y="633.43213"
           ry="17.176674" />
        <circle
           style="opacity:1;fill:#333333;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.7;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="path5526"
           cx="-188.32671"
           cy="578.82867"
           r="9.8804779" />
        <circle
           style="opacity:1;fill:#333333;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.7;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="circle5630"
           cx="-46.326714"
           cy="578.82867"
           r="9.8804779" />
        <rect
           style="opacity:1;fill:#f2f2f2;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.55188;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           id="rect5677"
           width="252.4174"
           height="90.149071"
           x="-242.77228"
           y="389.21194"
           ry="16.733084" />
      </g>
      <path
         style="fill:#786721;stroke-width:0.39681"
         d="m -76.51708,444.44254 c -0.2619,-0.26191 -0.47618,-0.7976 -0.47618,-1.19044 0,-0.39284 -0.25772,-0.71425 -0.57271,-0.71425 -0.63452,0 -1.87625,-1.55284 -1.59963,-2.0004 0.0965,-0.15612 -0.35262,-0.38944 -0.998,-0.51852 -0.82552,-0.1651 -1.24812,-0.53236 -1.42541,-1.23875 -0.15737,-0.62701 -0.53102,-1.00405 -0.99505,-1.00405 -0.46164,0 -0.83733,-0.37569 -0.99202,-0.99203 -0.26329,-1.04905 -1.35338,-1.39043 -1.35338,-0.42383 0,0.31251 -0.55496,0.96337 -1.23325,1.44635 l -1.23326,0.87815 1.23326,0.51855 c 2.01245,0.84617 1.51529,3.33453 -0.66622,3.33453 -0.68798,0 -1.07008,-0.32574 -1.39646,-1.19044 -0.46317,-1.22705 -1.06898,-1.59922 -1.06898,-0.65671 0,0.29354 -0.35785,0.85757 -0.79522,1.25339 -0.65708,0.59465 -0.96729,0.64128 -1.78565,0.26841 -1.66039,-0.75652 -1.12384,-3.24595 0.69961,-3.24595 0.40572,0 0.6453,-0.14945 0.5324,-0.33213 -0.29946,-0.48453 0.89906,-2.04872 1.56977,-2.04872 0.84948,0 0.69382,-0.7017 -0.21998,-0.99173 -0.43599,-0.13838 -0.90176,-0.68611 -1.03505,-1.21718 -0.31446,-1.25293 -1.19156,-1.24106 -1.50816,0.0204 -0.15058,0.59996 -0.62461,1.08064 -1.21074,1.22775 -0.58448,0.1467 -1.01122,0.57819 -1.08518,1.09727 -0.0764,0.53674 -0.45459,0.90276 -1.01474,0.98231 -0.49106,0.0697 -0.89283,0.33989 -0.89283,0.60032 0,0.26044 0.40177,0.64979 0.89283,0.86523 1.78159,0.78163 1.18456,3.36778 -0.77748,3.36778 -0.72216,0 -1.0954,-0.31132 -1.42724,-1.19044 -0.5445,-1.44254 -0.90314,-1.50835 -1.22527,-0.22485 -0.44514,1.77356 -2.81763,1.75723 -3.26432,-0.0225 -0.27783,-1.10698 0.42348,-2.13353 1.45757,-2.13353 0.43,0 0.76824,-0.34146 0.84424,-0.8523 0.0697,-0.46876 0.48392,-1.0491 0.92042,-1.28962 0.43648,-0.24054 0.86551,-0.47949 0.95339,-0.53099 0.0879,-0.0515 -0.31388,-0.46623 -0.89282,-0.92162 -0.57893,-0.4554 -1.0526,-1.06352 -1.0526,-1.35138 0,-0.28787 -0.44369,-0.63476 -0.98598,-0.77087 -0.60827,-0.15266 -1.08078,-0.62517 -1.23345,-1.23345 -0.15568,-0.62026 -0.52903,-0.98598 -1.00657,-0.98598 -0.41751,0 -0.94551,-0.40908 -1.17332,-0.90908 -0.22781,-0.5 -0.80431,-1.08033 -1.28113,-1.28963 -0.47681,-0.2093 -0.91923,-0.74606 -0.98316,-1.1928 -0.0682,-0.47653 -0.60124,-0.99533 -1.28963,-1.25517 -0.78364,-0.29579 -1.17338,-0.71797 -1.17338,-1.271 0,-0.56647 -0.25342,-0.82808 -0.80213,-0.82808 -0.46933,0 -0.98861,-0.40929 -1.25159,-0.98646 -0.24721,-0.54256 -0.86835,-1.26093 -1.38033,-1.59639 -1.27559,-0.8358 -1.24316,-2.45041 0.0611,-3.04469 1.18644,-0.54058 1.29615,-1.11823 0.21236,-1.11823 -1.81503,0 -1.82696,-2.79746 -0.0144,-3.37275 1.02709,-0.32599 1.00593,-0.70751 -0.0664,-1.19567 -1.44028,-0.65572 -1.79532,-1.61279 -0.94631,-2.55093 0.40656,-0.44927 0.9794,-0.81685 1.27294,-0.81685 0.81914,0 0.63323,-0.70855 -0.26033,-0.99215 -1.67453,-0.53148 -1.88496,-2.57609 -0.34971,-3.39774 0.98384,-0.52653 2.33418,0.18467 2.33418,1.22937 0,0.44582 0.26828,0.77966 0.62655,0.77966 0.66266,0 4.13517,3.25241 4.13517,3.87308 0,0.20044 0.44641,0.56784 0.99202,0.81644 0.8929,0.40683 1.05384,0.66118 0.96504,1.52521 -0.0149,0.14442 0.52085,0.49293 1.19044,0.77447 0.79582,0.33461 1.21741,0.79333 1.21741,1.32465 0,1.07227 0.89806,1.0416 1.39394,-0.0476 0.65571,-1.44026 1.61279,-1.7953 2.55093,-0.9463 0.44926,0.40659 0.81684,0.97941 0.81684,1.27295 0,0.29355 0.17857,0.53371 0.39681,0.53371 0.21826,0 0.39682,-0.24016 0.39682,-0.53371 0,-0.91727 1.4544,-1.94278 2.3515,-1.65805 1.58006,0.50149 1.39469,3.3822 -0.21763,3.3822 -0.30065,0 -0.54664,0.26784 -0.54664,0.59522 0,0.32736 0.24599,0.5952 0.54664,0.5952 1.73908,0 1.77619,2.97474 0.0425,3.40986 -1.16828,0.29323 -1.31717,0.95505 -0.21486,0.95505 0.78926,0 2.11688,1.48451 1.79433,2.00639 -0.0985,0.1594 0.26334,0.40087 0.80413,0.53659 0.5973,0.14992 1.07813,0.62489 1.225,1.21005 0.1467,0.58448 0.57819,1.01122 1.09727,1.08519 0.47053,0.067 1.02675,0.51202 1.23606,0.98883 0.2093,0.47681 0.78963,1.05331 1.28963,1.28113 0.5,0.22781 0.90908,0.7558 0.90908,1.17331 0,0.47324 0.36362,0.85037 0.96558,1.00145 0.53107,0.13329 1.07019,0.57196 1.19806,0.97482 0.12786,0.40287 0.65997,0.92726 1.18246,1.16532 0.52248,0.23806 1.05312,0.75781 1.17918,1.155 0.12606,0.39718 0.63261,0.89912 1.12565,1.11541 0.49304,0.2163 0.9535,0.79503 1.02324,1.28609 0.15759,1.10968 1.26203,1.18905 1.26203,0.0907 0,-0.4741 0.41257,-0.9901 1.00885,-1.26179 0.86397,-0.39365 1.13063,-0.33787 1.857,0.3885 0.72637,0.72637 0.78215,0.99301 0.3885,1.857 -0.25282,0.55487 -0.79086,1.00885 -1.19566,1.00885 -0.40479,0 -0.73599,0.26784 -0.73599,0.59522 0,0.32736 0.22533,0.5952 0.50074,0.5952 0.66338,0 1.74785,1.10792 1.74785,1.78565 0,1.38796 -2.11979,2.2848 -3.09512,1.30948 z m -18.72943,-10.63451 c 0,-0.21824 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39682,0.17857 -0.39682,0.39681 0,0.21824 0.17857,0.39681 0.39682,0.39681 0.21825,0 0.39681,-0.17857 0.39681,-0.39681 z m 9.12663,0 c 0,-0.21824 -0.17857,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39681,0.17857 -0.39681,0.39681 0,0.21824 0.17856,0.39681 0.39681,0.39681 0.21824,0 0.39681,-0.17857 0.39681,-0.39681 z m -11.50749,-1.98405 c 0,-0.21825 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39681,0.17856 -0.39681,0.39681 0,0.21824 0.17856,0.39681 0.39681,0.39681 0.21825,0 0.39681,-0.17857 0.39681,-0.39681 z m 4.76172,-0.19841 c 0,-0.32736 -0.26785,-0.59521 -0.59522,-0.59521 -0.32737,0 -0.59522,0.26785 -0.59522,0.59521 0,0.32737 0.26785,0.59522 0.59522,0.59522 0.32737,0 0.59522,-0.26785 0.59522,-0.59522 z m 4.36491,0.19841 c 0,-0.21825 -0.17857,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39682,0.17856 -0.39682,0.39681 0,0.21824 0.17857,0.39681 0.39682,0.39681 0.21824,0 0.39681,-0.17857 0.39681,-0.39681 z m -11.11068,-2.56681 c 0,-0.35498 -0.23264,-0.49349 -0.59522,-0.35436 -0.32737,0.12562 -0.59521,0.38786 -0.59521,0.58277 0,0.19488 0.26784,0.35435 0.59521,0.35435 0.32738,0 0.59522,-0.26225 0.59522,-0.58276 z m 4.36491,0.18595 c 0,-0.21824 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39682,0.17857 -0.39682,0.39681 0,0.21824 0.17857,0.39681 0.39682,0.39681 0.21825,0 0.39681,-0.17857 0.39681,-0.39681 z m 4.76172,0 c 0,-0.21824 -0.26785,-0.39681 -0.59522,-0.39681 -0.32737,0 -0.59522,0.17857 -0.59522,0.39681 0,0.21824 0.26785,0.39681 0.59522,0.39681 0.32737,0 0.59522,-0.17857 0.59522,-0.39681 z m -7.14258,-2.18246 c 0,-0.32736 -0.17856,-0.59521 -0.39681,-0.59521 -0.21825,0 -0.39681,0.26785 -0.39681,0.59521 0,0.32737 0.17856,0.59522 0.39681,0.59522 0.21825,0 0.39681,-0.26785 0.39681,-0.59522 z m -4.36491,-0.1984 c 0,-0.21824 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39681,0.17857 -0.39681,0.39681 0,0.21825 0.17856,0.39681 0.39681,0.39681 0.21825,0 0.39681,-0.17856 0.39681,-0.39681 z m 9.12663,0 c 0,-0.21824 -0.26785,-0.39681 -0.59522,-0.39681 -0.32737,0 -0.59522,0.17857 -0.59522,0.39681 0,0.21825 0.26785,0.39681 0.59522,0.39681 0.32737,0 0.59522,-0.17856 0.59522,-0.39681 z m -11.11068,-1.98405 c 0,-0.21824 -0.26784,-0.39681 -0.59521,-0.39681 -0.32737,0 -0.59522,0.17857 -0.59522,0.39681 0,0.21825 0.26785,0.39681 0.59522,0.39681 0.32737,0 0.59521,-0.17856 0.59521,-0.39681 z m 4.20784,-0.68615 c -0.40336,-0.40336 -0.73618,0.20392 -0.40523,0.73941 0.25,0.40452 0.34347,0.40483 0.47788,0.002 0.0919,-0.2757 0.0592,-0.60915 -0.0727,-0.74101 z m 4.78652,0.48774 c 0,-0.32736 -0.23809,-0.5952 -0.52908,-0.5952 -0.56325,0 -0.70262,0.4878 -0.26454,0.92588 0.4431,0.4431 0.79362,0.29705 0.79362,-0.33068 z m -11.59932,-2.14087 c 0.12075,-0.19537 -0.0473,-0.45761 -0.37339,-0.58276 -0.36017,-0.1382 -0.59294,9.1e-4 -0.59294,0.35523 0,0.64179 0.62007,0.78779 0.96633,0.22753 z m 4.58901,-0.17384 c 0,-0.29101 -0.25082,-0.52908 -0.55738,-0.52908 -0.30656,0 -0.46603,0.23807 -0.35436,0.52908 0.11167,0.29098 0.36249,0.52907 0.55738,0.52907 0.1949,0 0.35436,-0.23809 0.35436,-0.52907 z m 4.36491,-0.0662 c 0,-0.32737 -0.17856,-0.59521 -0.39681,-0.59521 -0.21825,0 -0.39681,0.26784 -0.39681,0.59521 0,0.32737 0.17856,0.59521 0.39681,0.59521 0.21825,0 0.39681,-0.26784 0.39681,-0.59521 z m -11.11067,-2.18245 c 0,-0.21825 -0.17857,-0.39681 -0.39682,-0.39681 -0.21825,0 -0.39681,0.17856 -0.39681,0.39681 0,0.21824 0.17856,0.3968 0.39681,0.3968 0.21825,0 0.39682,-0.17856 0.39682,-0.3968 z m 4.36491,0 c 0,-0.21825 -0.17857,-0.39681 -0.39682,-0.39681 -0.21825,0 -0.39681,0.17856 -0.39681,0.39681 0,0.21824 0.17856,0.3968 0.39681,0.3968 0.21825,0 0.39682,-0.17856 0.39682,-0.3968 z m 4.76171,0 c 0,-0.21825 -0.26784,-0.39681 -0.59522,-0.39681 -0.32737,0 -0.59521,0.17856 -0.59521,0.39681 0,0.21824 0.26784,0.3968 0.59521,0.3968 0.32738,0 0.59522,-0.17856 0.59522,-0.3968 z m 4.36491,0 c 0,-0.21825 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39682,0.17856 -0.39682,0.39681 0,0.21824 0.17857,0.3968 0.39682,0.3968 0.21825,0 0.39681,-0.17856 0.39681,-0.3968 z m -11.11068,-2.42332 c 0,-0.19489 -0.26784,-0.35435 -0.59521,-0.35435 -0.32737,0 -0.59522,0.26224 -0.59522,0.58276 0,0.35498 0.23264,0.49349 0.59522,0.35435 0.32737,-0.12562 0.59521,-0.38786 0.59521,-0.58276 z m 4.36491,0.0424 c 0,-0.21825 -0.17856,-0.39681 -0.39681,-0.39681 -0.21825,0 -0.39681,0.17856 -0.39681,0.39681 0,0.21824 0.17856,0.3968 0.39681,0.3968 0.21825,0 0.39681,-0.17856 0.39681,-0.3968 z m 4.76172,0 c 0,-0.21825 -0.26785,-0.39681 -0.59522,-0.39681 -0.32737,0 -0.59521,0.17856 -0.59521,0.39681 0,0.21824 0.26784,0.3968 0.59521,0.3968 0.32737,0 0.59522,-0.17856 0.59522,-0.3968 z m -11.50748,-2.18245 c 0,-0.32737 -0.26785,-0.59522 -0.59522,-0.59522 -0.32737,0 -0.59522,0.26785 -0.59522,0.59522 0,0.32736 0.26785,0.5952 0.59522,0.5952 0.32737,0 0.59522,-0.26784 0.59522,-0.5952 z m 4.36491,0 c 0,-0.32737 -0.17857,-0.59522 -0.39682,-0.59522 -0.21825,0 -0.39681,0.26785 -0.39681,0.59522 0,0.32736 0.17856,0.5952 0.39681,0.5952 0.21825,0 0.39682,-0.26784 0.39682,-0.5952 z m -1.98406,-2.18246 c 0,-0.21825 -0.26784,-0.39681 -0.59521,-0.39681 -0.32737,0 -0.59522,0.17856 -0.59522,0.39681 0,0.21824 0.26785,0.39681 0.59522,0.39681 0.32737,0 0.59521,-0.17857 0.59521,-0.39681 z m -2.38085,-2.38086 c 0,-0.21824 -0.26785,-0.39681 -0.59522,-0.39681 -0.32737,0 -0.59522,0.17857 -0.59522,0.39681 0,0.21824 0.26785,0.39681 0.59522,0.39681 0.32737,0 0.59522,-0.17857 0.59522,-0.39681 z m -1.97978,30.75792 c -1.1087,-1.33591 0.47393,-3.38189 2.12569,-2.74805 0.86788,0.33303 1.25951,2.00571 0.64343,2.74805 -0.62987,0.75894 -2.13926,0.75894 -2.76912,0 z m 4.8368,0.11389 c -1.5412,-1.54121 0.68519,-3.96264 2.29989,-2.50136 1.36222,1.23279 0.78187,2.97753 -0.99041,2.97753 -0.45832,0 -1.04758,-0.21428 -1.30948,-0.47617 z m -125.3718,-0.51532 c -1.59901,-0.69095 -2.26807,-2.06688 -1.91644,-3.94121 0.35551,-1.89502 1.56871,-2.64404 4.13545,-2.55319 1.62739,0.0576 2.08153,0.22567 2.2774,0.84282 0.41493,1.30731 -0.42473,1.65849 -1.704,0.71269 -0.92573,-0.68443 -1.35484,-0.7766 -2.17097,-0.46632 -1.97918,0.7525 -1.74281,4.14112 0.32508,4.66012 0.86897,0.2181 1.25555,0.0586 2.02455,-0.83544 0.71483,-0.83105 1.06332,-0.99216 1.4056,-0.64988 0.34228,0.34228 0.21275,0.68961 -0.52248,1.40097 -1.32053,1.27767 -2.31945,1.49264 -3.85419,0.82944 z m 13.13691,0.1915 c -2.08627,-0.81793 -2.77428,-3.82373 -1.30329,-5.6938 1.12705,-1.43281 3.55303,-1.46788 4.94936,-0.0716 2.51879,2.51879 -0.35128,7.05707 -3.64607,5.76535 z m 2.63601,-1.58081 c 0.43649,-0.43649 0.79362,-1.24003 0.79362,-1.78564 0,-1.09686 -1.25435,-2.57927 -2.18246,-2.57927 -0.9281,0 -2.18245,1.48241 -2.18245,2.57927 0,1.09685 1.25435,2.57926 2.18245,2.57926 0.32737,0 0.95235,-0.35712 1.38884,-0.79362 z m 4.50718,1.41057 c -2.2431,-0.97604 -2.60912,-4.51928 -0.62269,-6.02795 0.39198,-0.2977 1.64296,-0.49904 2.96048,-0.47648 2.10799,0.0361 2.28165,0.10885 2.28165,0.95581 0,1.29393 -0.62798,1.52602 -1.57276,0.58123 -0.96956,-0.96956 -1.53461,-1.00934 -2.70385,-0.19037 -1.64975,1.15553 -0.7824,4.54081 1.16342,4.54081 0.32669,0 1.0156,-0.44878 1.53089,-0.99727 1.05912,-1.12739 1.91754,-0.76737 1.23064,0.51613 -0.31164,0.58229 -2.54773,1.82441 -2.98122,1.65604 -0.022,-0.008 -0.60095,-0.25962 -1.28656,-0.55795 z m 7.79393,0.3015 c -2.35744,-0.89446 -3.13899,-3.81571 -1.55845,-5.82506 1.84041,-2.3397 5.92335,-0.76315 5.92335,2.28718 0,2.28478 -2.44483,4.26638 -4.3649,3.53788 z m 2.38085,-1.71207 c 0.43649,-0.43649 0.79362,-1.24003 0.79362,-1.78564 0,-1.09686 -1.25434,-2.57927 -2.18245,-2.57927 -0.89655,0 -2.18246,1.46769 -2.18246,2.49097 0,1.24072 1.07328,2.66756 2.00656,2.66756 0.42411,0 1.12825,-0.35712 1.56473,-0.79362 z m 19.18668,1.5862 c -1.2262,-0.48942 -1.43861,-1.01621 -1.38296,-3.42979 0.0363,-1.57659 -0.10888,-2.21143 -0.54406,-2.37842 -1.06934,-0.41035 -0.62257,-0.93652 0.7952,-0.93652 0.76386,0 1.38883,0.17857 1.38883,0.39681 0,0.21825 -0.17856,0.39681 -0.39681,0.39681 -0.21825,0 -0.39682,0.96024 -0.39682,2.13387 0,2.35501 0.62599,3.25729 1.96502,2.8323 0.6987,-0.22176 0.81266,-0.58805 0.81266,-2.61205 0,-1.30487 -0.17687,-2.35412 -0.39681,-2.35412 -0.21825,0 -0.39682,-0.17856 -0.39682,-0.39681 0,-0.21824 0.62498,-0.39681 1.38884,-0.39681 0.76386,0 1.38884,0.17857 1.38884,0.39681 0,0.21825 -0.17856,0.39681 -0.39682,0.39681 -0.21899,0 -0.39681,1.03289 -0.39681,2.30502 0,3.15559 -1.27259,4.50778 -3.43148,3.64609 z m 26.34726,0.11364 c -0.90488,-0.13708 -1.09123,-0.3641 -1.09123,-1.32939 0,-0.77018 0.2014,-1.16407 0.59521,-1.16407 0.32738,0 0.59522,0.24875 0.59522,0.55276 0,0.78755 1.23623,1.15878 1.84175,0.55305 0.66158,-0.66182 0.28641,-1.14585 -1.54414,-1.99221 -1.09318,-0.50544 -1.48804,-0.93188 -1.48804,-1.60708 0,-1.53392 0.73479,-1.87143 4.0742,-1.87143 2.79097,0 3.09895,0.0736 2.90577,0.69442 -0.11885,0.38193 -0.0416,0.96226 0.17167,1.28963 0.34467,0.52908 0.43083,0.52908 0.7755,0 0.21327,-0.32737 0.29423,-0.89596 0.17995,-1.26354 -0.18346,-0.59 0.18963,-0.66979 3.18353,-0.6809 3.34381,-0.0125 3.39134,9.1e-4 3.39134,0.96592 0,1.13243 -0.26986,1.21641 -1.20099,0.37374 -0.67135,-0.60755 -1.97348,-0.42896 -1.97348,0.27067 0,0.20604 0.59454,0.62302 1.32122,0.92665 1.78697,0.74665 2.39356,1.55937 2.08409,2.79238 -0.301,1.19929 -1.34771,1.66916 -3.22903,1.44954 -1.20573,-0.14077 -1.36671,-0.29467 -1.36671,-1.30659 0,-1.36288 0.60053,-1.47338 1.56103,-0.28721 0.44053,0.54403 0.93751,0.76719 1.35323,0.60766 1.08441,-0.41612 0.74411,-1.47157 -0.66419,-2.05999 -1.50096,-0.62715 -2.0977,-1.24102 -2.31701,-2.38354 -0.12903,-0.67215 -0.31776,-0.55177 -1.23313,0.78653 -1.07519,1.57196 -1.44107,3.37997 -0.68398,3.37997 0.21824,0 0.3968,0.26785 0.3968,0.59521 0,0.41572 -0.41885,0.59522 -1.38883,0.59522 -1.33713,0 -1.81842,-0.48128 -0.99202,-0.99202 0.65998,-0.40789 0.44703,-2.20594 -0.42918,-3.62366 -0.87186,-1.41071 -1.55487,-1.73632 -1.55487,-0.74125 0,0.76913 -0.68468,0.76085 -1.46324,-0.0177 -0.7083,-0.7083 -1.46146,-0.57805 -1.62831,0.28162 -0.0732,0.37741 0.47083,0.82525 1.48804,1.22483 1.38106,0.5425 1.60351,0.79632 1.60351,1.82973 0,1.06496 -1.25749,2.5791 -1.97314,2.37582 -0.11513,-0.0327 -0.70036,-0.13384 -1.30054,-0.22476 z m -89.97664,-0.48599 c 0,-0.20536 0.17857,-0.48375 0.39681,-0.61863 0.21824,-0.13489 0.39681,-1.3061 0.39681,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39681,-2.35744 -0.21824,0 -0.39681,-0.18934 -0.39681,-0.42076 0,-0.24164 0.61116,-0.36833 1.4356,-0.29761 1.34121,0.11506 1.48819,0.26457 2.23527,2.27366 l 0.79967,2.1505 0.86296,-2.1505 0.86296,-2.1505 2.65551,-0.11733 c 1.65796,-0.0732 2.65552,0.0385 2.65552,0.2976 0,0.22822 -0.17857,0.41494 -0.39681,0.41494 -0.22002,0 -0.39682,1.05036 -0.39682,2.35744 0,1.29659 0.17856,2.4678 0.39682,2.60269 1.02248,0.63192 0.15824,0.99202 -2.38087,0.99202 -2.72521,0 -3.19963,-0.21293 -2.3554,-1.05716 0.23224,-0.23223 0.36616,-1.20542 0.2976,-2.16261 l -0.12465,-1.74036 -0.99,2.48007 c -0.5445,1.36403 -1.10016,2.48006 -1.23479,2.48006 -0.13463,0 -0.70201,-1.20531 -1.26084,-2.67846 l -1.01606,-2.67847 -0.0308,2.08325 c -0.017,1.14578 0.14775,2.08325 0.366,2.08325 0.21825,0 0.39682,0.26785 0.39682,0.59521 0,0.41572 -0.41886,0.59522 -1.38884,0.59522 -0.76386,0 -1.38884,-0.16803 -1.38884,-0.37339 z m 9.44317,-3.13019 c 0.10814,-2.24151 0.0494,-2.44857 -0.69442,-2.44857 -0.726,0 -0.81256,0.24656 -0.81256,2.31473 0,1.2731 0.12277,2.43748 0.27281,2.58753 0.68191,0.68192 1.12543,-0.19984 1.23417,-2.45369 z m 9.6037,3.13019 c 0,-0.20536 0.17856,-0.48375 0.39681,-0.61863 0.21825,-0.13489 0.39681,-1.3061 0.39681,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39681,-2.35744 -0.21825,0 -0.39681,-0.17856 -0.39681,-0.39681 0,-0.56364 4.10901,-0.49399 4.68236,0.0794 0.68231,0.68231 0.58724,2.19991 -0.16415,2.62041 -0.54213,0.30339 -0.56367,0.50417 -0.14047,1.30935 0.2749,0.52305 0.74162,1.0938 1.03712,1.26833 0.82983,0.49011 0.63605,1.07196 -0.35553,1.06748 -0.66393,-0.003 -1.0633,-0.40993 -1.55778,-1.58724 -0.36572,-0.87077 -0.85677,-1.58321 -1.09123,-1.58321 -0.53793,0 -0.56295,1.85275 -0.0295,2.18246 0.82639,0.51074 0.34511,0.99202 -0.99203,0.99202 -0.76385,0 -1.38883,-0.16803 -1.38883,-0.37339 z m 3.83997,-4.22997 c 0.24672,-0.64292 -0.45075,-1.33157 -1.35991,-1.34271 -0.27281,-0.003 -0.49601,0.44033 -0.49601,0.98594 0,0.73261 0.2108,0.99203 0.80607,0.99203 0.44334,0 0.91578,-0.28587 1.04985,-0.63526 z m 23.93672,4.22997 c 0,-0.20536 0.17857,-0.48375 0.39681,-0.61863 0.21824,-0.13489 0.39681,-1.3061 0.39681,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39681,-2.35744 -0.21824,0 -0.39681,-0.17856 -0.39681,-0.39681 0,-0.21824 0.61063,-0.39681 1.35694,-0.39681 1.27593,0 1.3963,0.11847 2.01595,1.98405 0.36245,1.09123 0.78793,1.98405 0.94552,1.98405 0.1576,0 0.60759,-0.89282 0.99999,-1.98405 l 0.71346,-1.98405 h 3.50309 c 2.65555,0 3.65395,0.15087 4.12665,0.62356 1.31276,1.31276 0.44871,3.05843 -1.75322,3.54205 -1.16691,0.2563 -1.58994,1.0985 -0.7977,1.58814 1.02248,0.63192 0.15825,0.99202 -2.38086,0.99202 -2.72396,0 -3.19954,-0.21303 -2.35685,-1.05571 0.23144,-0.23145 0.36537,-1.28694 0.2976,-2.34552 l -0.12321,-1.92473 -1.04652,2.56378 c -0.57558,1.41008 -1.17563,2.56377 -1.33343,2.56377 -0.1578,0 -0.70102,-1.07138 -1.20716,-2.38086 l -0.92027,-2.38086 -0.028,1.86143 c -0.0154,1.02379 0.15061,1.97179 0.36885,2.10668 0.8264,0.51074 0.34511,0.99202 -0.99202,0.99202 -0.76386,0 -1.38884,-0.16803 -1.38884,-0.37339 z m 9.44317,-3.13019 c 0.10815,-2.24151 0.0494,-2.44857 -0.69441,-2.44857 -0.72601,0 -0.81256,0.24656 -0.81256,2.31473 0,1.2731 0.12276,2.43748 0.27281,2.58753 0.68191,0.68192 1.12542,-0.19984 1.23416,-2.45369 z m 3.29039,-0.70586 c 0.44998,-0.54221 0.41605,-0.7212 -0.22567,-1.19043 -1.20538,-0.8814 -1.79402,-0.67203 -1.79402,0.63815 0,0.90002 0.18176,1.19043 0.74503,1.19043 0.40977,0 0.98336,-0.28717 1.27466,-0.63815 z m 10.28142,3.83605 c 0,-0.20536 0.17856,-0.48375 0.39681,-0.61863 0.21824,-0.13489 0.39681,-1.3061 0.39681,-2.60269 0,-1.83096 -0.13293,-2.35744 -0.59522,-2.35744 -0.37036,0 -0.59522,0.37477 -0.59522,0.99202 0,0.54562 -0.17856,0.99203 -0.39681,0.99203 -0.21824,0 -0.3968,-0.62497 -0.3968,-1.38883 v -1.38884 h 2.57926 2.57926 v 1.38884 c 0,1.51506 -0.66062,1.91752 -0.86522,0.52709 -0.0698,-0.47395 -0.35001,-0.93525 -0.62282,-1.02509 -0.61431,-0.20231 -0.70994,4.48545 -0.0992,4.86291 0.8264,0.51074 0.34512,0.99202 -0.99202,0.99202 -0.76387,0 -1.38884,-0.16803 -1.38884,-0.37339 z m 4.36491,0 c 0,-0.20536 0.17856,-0.48375 0.39681,-0.61863 0.21824,-0.13489 0.39681,-1.3061 0.39681,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39681,-2.35744 -0.21825,0 -0.39681,-0.17856 -0.39681,-0.39681 0,-0.22675 1.19042,-0.39681 2.77767,-0.39681 2.6983,0 2.77766,0.0283 2.77766,0.99203 0,0.54561 -0.17856,0.99202 -0.39681,0.99202 -0.21824,0 -0.3968,-0.26784 -0.3968,-0.59521 0,-0.41571 -0.41886,-0.59522 -1.38884,-0.59522 -1.21688,0 -1.38884,0.12282 -1.38884,0.99202 0,0.83772 0.18518,0.99203 1.19043,0.99203 0.65474,0 1.19044,0.17856 1.19044,0.39681 0,0.21825 -0.5357,0.39682 -1.19044,0.39682 -1.00525,0 -1.19043,0.15431 -1.19043,0.99202 0,0.8692 0.17196,0.99202 1.38884,0.99202 0.96998,0 1.38884,-0.17951 1.38884,-0.59521 0,-0.32737 0.17856,-0.59522 0.3968,-0.59522 0.21825,0 0.39681,0.53569 0.39681,1.19043 v 1.19043 h -2.77766 c -1.52772,0 -2.77767,-0.16803 -2.77767,-0.37339 z m 5.95214,0 c 0,-0.20536 0.17856,-0.48375 0.39681,-0.61863 0.21825,-0.13489 0.39682,-1.3061 0.39682,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39682,-2.35744 -0.21825,0 -0.39681,-0.17856 -0.39681,-0.39681 0,-0.2206 1.061,-0.39681 2.38937,-0.39681 2.16255,0 2.4322,0.094 2.84063,0.99042 0.37064,0.81346 0.32728,1.1274 -0.24268,1.75721 -0.75217,0.83113 -0.59122,2.01029 0.38498,2.82047 0.81314,0.67484 0.72137,1.17767 -0.21495,1.17767 -0.54812,0 -1.00822,-0.49263 -1.48244,-1.58724 -0.3782,-0.87298 -0.91337,-1.58723 -1.18925,-1.58723 -0.59254,0 -0.68025,1.8268 -0.1048,2.18245 0.8264,0.51074 0.34512,0.99202 -0.99203,0.99202 -0.76386,0 -1.38883,-0.16803 -1.38883,-0.37339 z m 3.8793,-4.06144 c 0.60044,-0.60044 -0.0946,-1.51732 -1.15022,-1.51732 -0.53016,0 -0.74503,0.2861 -0.74503,0.99202 0,1.08082 1.04899,1.37157 1.89525,0.5253 z m 21.91334,3.83961 c 0,-0.32736 0.18748,-0.59521 0.41661,-0.59521 0.58176,0 0.30701,-4.45829 -0.28681,-4.65404 -0.25598,-0.0843 -0.52383,0.22107 -0.59522,0.67879 -0.20607,1.32129 -0.91121,1.12582 -1.04776,-0.29046 l -0.12435,-1.28963 h 2.80282 2.8028 v 1.4219 c 0,1.58007 -0.89619,1.74831 -1.12181,0.21059 -0.24285,-1.65506 -1.06005,-0.58819 -1.18302,1.54443 -0.093,1.6125 0.0282,2.2068 0.50436,2.47327 0.90118,0.50432 0.36118,1.09558 -1.00061,1.09558 -0.77281,0 -1.16701,-0.20105 -1.16701,-0.59522 z m 4.36491,0.22183 c 0,-0.20536 0.17857,-0.48375 0.39681,-0.61863 0.21825,-0.13489 0.39681,-1.20627 0.39681,-2.38086 0,-1.1746 -0.17856,-2.24598 -0.39681,-2.38086 -1.02248,-0.63193 -0.15825,-0.99203 2.38086,-0.99203 2.69831,0 2.77767,0.0283 2.77767,0.99203 0,1.09122 -0.57691,1.3355 -0.93712,0.39681 -0.13352,-0.34794 -0.72811,-0.59522 -1.43129,-0.59522 -1.01853,0 -1.20288,0.15204 -1.20288,0.99202 0,0.83772 0.18518,0.99203 1.19043,0.99203 0.65473,0 1.19043,0.17856 1.19043,0.39681 0,0.21825 -0.5357,0.39682 -1.19043,0.39682 -1.00525,0 -1.19043,0.15431 -1.19043,0.99202 0,0.8692 0.17195,0.99202 1.38884,0.99202 0.96997,0 1.38883,-0.17951 1.38883,-0.59521 0,-0.32737 0.17857,-0.59522 0.39681,-0.59522 0.21824,0 0.39681,0.53569 0.39681,1.19043 v 1.19043 h -2.77767 c -1.52772,0 -2.77767,-0.16803 -2.77767,-0.37339 z m 5.95215,0 c 0,-0.20536 0.17856,-0.48375 0.3968,-0.61863 0.21826,-0.13489 0.39682,-1.3061 0.39682,-2.60269 0,-1.30708 -0.1768,-2.35744 -0.39682,-2.35744 -0.21824,0 -0.3968,-0.17856 -0.3968,-0.39681 0,-0.21824 0.60704,-0.39681 1.34898,-0.39681 1.25912,0 1.39651,0.13219 2.06244,1.98405 0.3924,1.09123 0.83881,1.98405 0.99202,1.98405 0.15321,0 0.59963,-0.89282 0.99203,-1.98405 0.66032,-1.83631 0.81103,-1.98405 2.02389,-1.98405 0.72075,0 1.31045,0.17857 1.31045,0.39681 0,0.21825 -0.17856,0.39681 -0.39681,0.39681 -0.22001,0 -0.3968,1.05036 -0.3968,2.35744 0,1.29659 0.17856,2.4678 0.3968,2.60269 0.8264,0.51074 0.34511,0.99202 -0.99202,0.99202 -1.33714,0 -1.81842,-0.48128 -0.99203,-0.99202 0.21825,-0.13489 0.38473,-1.17217 0.36996,-2.30508 -0.029,-2.22281 -0.0213,-2.23009 -1.56419,1.46842 -0.44536,1.06755 -0.9129,1.83787 -1.03896,1.7118 -0.12606,-0.12606 -0.64797,-1.35664 -1.15978,-2.73463 l -0.93058,-2.50542 -0.0207,2.05983 c -0.0114,1.13291 0.15789,2.17019 0.37614,2.30508 0.82639,0.51074 0.34511,0.99202 -0.99203,0.99202 -0.76386,0 -1.38883,-0.16803 -1.38883,-0.37339 z m 52.45827,-6.05493 c -1.05449,-1.05449 -0.28832,-3.09511 1.16208,-3.09511 0.8181,0 1.93303,1.02992 1.93303,1.78564 0,1.38796 -2.11979,2.2848 -3.09511,1.30947 z m 0,-4.76172 c -0.70488,-0.70487 -0.57945,-1.68823 0.31906,-2.50136 0.65708,-0.59464 0.96729,-0.64127 1.78564,-0.26841 1.71515,0.78147 1.11137,3.24594 -0.79524,3.24594 -0.4583,0 -1.04757,-0.21427 -1.30946,-0.47617 z m -0.15923,-4.89758 c -0.39366,-0.86398 -0.33788,-1.13064 0.38849,-1.857 0.72636,-0.72637 0.99302,-0.78216 1.85701,-0.3885 0.65886,0.3002 1.00884,0.77923 1.00884,1.38083 0,1.99678 -2.4428,2.64582 -3.25434,0.86467 z m 0.27681,-4.1513 c -1.46128,-1.6147 0.96015,-3.84109 2.50136,-2.29988 0.72899,0.72899 0.56658,2.22519 -0.29136,2.68435 -1.07626,0.57599 -1.39023,0.52136 -2.21,-0.38447 z m -14.04594,-4.8593 c -0.40625,-1.0929 -0.17284,-1.78549 0.7722,-2.29126 1.49289,-0.79897 3.1647,0.89233 2.36292,2.39046 -0.61608,1.15116 -2.69479,1.08538 -3.13512,-0.0992 z m 4.80172,0.41665 c -1.04712,-1.04714 -0.29006,-3.09512 1.14416,-3.09512 0.36739,0 0.76483,-0.37038 0.88321,-0.82307 0.11839,-0.45268 0.5705,-0.91597 1.0047,-1.02952 0.4342,-0.11354 0.89659,-0.63327 1.02751,-1.15493 0.14349,-0.57172 0.62973,-1.04679 1.22404,-1.19596 0.564,-0.14155 0.98598,-0.53475 0.98598,-0.91871 0,-0.85884 0.76321,-1.62358 1.62033,-1.62358 0.36738,0 0.75673,-0.33942 0.86522,-0.75427 0.10848,-0.41484 0.54811,-0.94204 0.97695,-1.17156 0.97284,-0.52064 2.48965,0.41091 2.48965,1.52902 0,0.80497 -1.50116,2.08408 -2.04872,1.74568 -0.18268,-0.1129 -0.33213,0.0537 -0.33213,0.37034 0,0.31659 0.42671,0.68272 0.94825,0.81361 1.77824,0.44631 1.78709,2.81884 0.0122,3.26431 -1.13596,0.28511 -2.15087,-0.41362 -2.15087,-1.48081 0,-1.0577 -1.10928,-0.9278 -1.26203,0.14779 -0.0698,0.49105 -0.49897,1.05635 -0.95385,1.2562 -0.45488,0.19987 -0.99058,0.73556 -1.19043,1.19044 -0.19986,0.45487 -0.75349,0.99829 -1.2303,1.20759 -0.47681,0.20931 -1.05332,0.78964 -1.28113,1.28964 -0.45417,0.9968 -1.93434,1.23129 -2.73272,0.43291 z m 9.12664,0 c -1.05449,-1.05449 -0.28832,-3.09512 1.16208,-3.09512 0.8181,0 1.93303,1.02993 1.93303,1.78565 0,1.38796 -2.11979,2.28479 -3.09511,1.30947 z m -18.22234,-5.01507 c -0.35554,-0.61949 -1.01684,-1.2891 -1.46958,-1.48804 -0.48336,-0.21239 -0.87485,-0.81078 -0.9484,-1.44958 -0.0974,-0.84656 0.10024,-1.1906 0.89122,-1.55099 0.84959,-0.38711 1.14698,-0.34499 1.81168,0.25654 0.43737,0.39583 0.79522,0.95985 0.79522,1.2534 0,0.29354 0.17857,0.53371 0.39682,0.53371 0.21824,0 0.39681,-0.32142 0.39681,-0.71426 0,-1.80312 2.4956,-2.323 3.24594,-0.67618 0.37287,0.81835 0.32624,1.12856 -0.26841,1.78564 -0.39582,0.43737 -0.97038,0.79523 -1.27681,0.79523 -0.30642,0 -0.46476,0.14947 -0.35186,0.33214 0.34692,0.56134 -0.95018,2.04872 -1.78663,2.04872 -0.45096,0 -1.0668,-0.48304 -1.436,-1.12633 z m 9.41315,-4.03219 c -0.43649,-0.4365 -0.79361,-0.9722 -0.79361,-1.19044 0,-0.21824 -0.24018,-0.39681 -0.53372,-0.39681 -0.29354,0 -0.85757,-0.35786 -1.25339,-0.79523 -0.59465,-0.65708 -0.64128,-0.96729 -0.26841,-1.78564 0.26451,-0.58055 0.78321,-0.99042 1.25339,-0.99042 0.5328,0 0.80213,-0.26178 0.80213,-0.77966 0,-0.95321 1.33727,-1.73401 2.39492,-1.39833 0.42774,0.13576 0.88676,0.68135 1.02005,1.21242 0.14249,0.56772 0.5316,0.96557 0.94437,0.96557 1.86663,0 2.03776,2.94809 0.19792,3.40986 -0.60715,0.15238 -0.98597,0.53049 -0.98597,0.98411 0,0.40515 -0.34539,0.92148 -0.76754,1.14741 -1.0239,0.54797 -1.09235,0.53494 -2.01014,-0.38284 z m 1.58724,-3.43903 c 0,-0.29099 -0.26784,-0.52908 -0.59521,-0.52908 -0.32737,0 -0.59522,0.23809 -0.59522,0.52908 0,0.291 0.26785,0.52908 0.59522,0.52908 0.32737,0 0.59521,-0.23808 0.59521,-0.52908 z m -20.07539,2.84381 c -0.35749,-0.54562 -0.88718,-0.99203 -1.17707,-0.99203 -0.79714,0 -1.70312,-1.53024 -1.4589,-2.46416 0.11874,-0.45406 0.69356,-1.00586 1.27735,-1.22623 0.5838,-0.22036 1.22581,-0.77475 1.42669,-1.232 0.67613,-1.53901 3.34131,-1.13064 3.34131,0.51198 0,0.35801 0.40177,0.8272 0.89283,1.04263 1.35163,0.593 1.42785,2.4378 0.12523,3.03131 -0.55993,0.25512 -1.01806,0.601 -1.01806,0.76864 0,0.58233 -1.25153,1.55188 -2.00325,1.55188 -0.41587,0 -1.04862,-0.44641 -1.40613,-0.99202 z m 1.82214,-2.75425 c 0,-0.0962 -0.17856,-0.28535 -0.39681,-0.42024 -0.21825,-0.13488 -0.39681,-0.0561 -0.39681,0.17499 0,0.23113 0.17856,0.42023 0.39681,0.42023 0.21825,0 0.39681,-0.0787 0.39681,-0.17498 z m -10.2224,-0.88295 c -1.55922,-0.62816 -1.30315,-3.30698 0.31611,-3.30698 1.06062,0 0.98663,-0.91144 -0.11316,-1.39394 -1.3507,-0.59258 -1.42792,-2.43776 -0.12685,-3.03057 0.8496,-0.3871 1.14699,-0.34499 1.81168,0.25655 0.43738,0.39582 0.79523,0.95985 0.79523,1.25339 0,0.29354 0.17856,0.53371 0.39681,0.53371 0.21825,0 0.39682,-0.36095 0.39682,-0.80212 0,-0.4741 0.41255,-0.9901 1.00884,-1.26179 0.86398,-0.39365 1.13064,-0.33788 1.857,0.38849 0.72637,0.72637 0.78216,0.99302 0.3885,1.85701 -0.27168,0.59628 -0.7877,1.00885 -1.26179,1.00885 -0.50788,0 -0.80213,0.26201 -0.80213,0.71425 0,0.9142 -0.7524,1.66661 -1.6666,1.66661 -0.44546,0 -0.71426,0.29341 -0.71426,0.77965 0,0.62977 -1.13359,1.70158 -1.66036,1.56988 -0.0689,-0.0172 -0.35054,-0.12208 -0.62584,-0.23299 z m 17.76179,-0.52931 c -0.43649,-0.43649 -0.79362,-0.92984 -0.79362,-1.09633 0,-0.1665 -0.40177,-0.47899 -0.89282,-0.69441 -0.49106,-0.21544 -0.94989,-0.79348 -1.01962,-1.28453 -0.0757,-0.53308 -0.40349,-0.89282 -0.81346,-0.89282 -1.77919,0 -2.27932,-2.50294 -0.6486,-3.24595 0.81836,-0.37287 1.12857,-0.32624 1.78565,0.26841 0.43737,0.39582 0.79522,0.95985 0.79522,1.25339 0,0.87672 0.63342,0.60575 1.12959,-0.48324 0.38067,-0.83547 0.693,-0.9948 1.75014,-0.89282 0.98554,0.0951 1.31647,0.33314 1.41359,1.01695 0.0697,0.49105 0.3698,0.89282 0.66681,0.89282 0.29701,0 0.59708,-0.40177 0.66682,-0.89282 0.17916,-1.26151 2.46029,-1.4983 3.09047,-0.32078 0.52908,0.9886 -0.0168,2.23387 -1.13476,2.5887 -0.41316,0.13114 -0.84651,0.60289 -0.963,1.04835 -0.11648,0.44547 -0.58218,0.90678 -1.03487,1.02516 -0.45268,0.11839 -0.82306,0.37298 -0.82306,0.56577 0,0.47894 -1.49368,1.93777 -1.98405,1.93777 -0.21825,0 -0.75395,-0.35712 -1.19043,-0.79362 z m 1.58724,-3.17448 c 0,-0.21824 -0.17857,-0.3968 -0.39681,-0.3968 -0.21825,0 -0.39682,0.17856 -0.39682,0.3968 0,0.21825 0.17857,0.39681 0.39682,0.39681 0.21824,0 0.39681,-0.17856 0.39681,-0.39681 z m 16.52911,3.24244 c -0.3612,-0.39912 -0.65672,-0.92239 -0.65672,-1.16283 0,-0.24044 -0.40177,-0.49423 -0.89282,-0.56397 -0.49105,-0.0698 -1.06979,-0.5302 -1.28609,-1.02324 -0.21629,-0.49305 -0.70753,-0.99619 -1.09165,-1.1181 -1.07102,-0.33994 -1.60139,-1.60136 -1.08162,-2.57255 0.58871,-1.10002 2.42202,-0.90084 2.95824,0.32138 0.21544,0.49105 0.57486,0.89282 0.79872,0.89282 0.22387,0 0.5833,-0.40177 0.79873,-0.89282 0.47339,-1.07901 2.2296,-1.38931 2.95004,-0.52123 0.75667,0.91173 0.19442,2.54582 -0.97713,2.83986 -1.1382,0.28567 -1.32864,0.95505 -0.27173,0.95505 1.63934,0 2.32181,2.39909 0.89907,3.16053 -1.06242,0.56858 -1.39114,0.52036 -2.14704,-0.3149 z m -168.7057,-4.23446 c 0,-2.4883 0.035,-2.57905 0.99203,-2.57319 1.44305,0.009 2.13252,0.57372 1.8798,1.54015 -0.11993,0.45861 -0.0563,0.93384 0.1415,1.05607 0.63602,0.39308 0.38332,1.72197 -0.40798,2.14546 -0.42214,0.22593 -1.18104,0.41078 -1.68644,0.41078 -0.86642,0 -0.91891,-0.14732 -0.91891,-2.57927 z m 2.57927,0.93711 c 0,-0.45023 -1.13719,-0.92422 -1.45498,-0.60643 -0.12667,0.12667 -0.12572,0.50284 0.002,0.83594 0.24057,0.62695 1.45287,0.43545 1.45287,-0.22951 z m -0.48775,-2.00353 c -0.24526,-0.73578 -1.09949,-0.85782 -1.09949,-0.15708 0,0.34556 0.28273,0.62828 0.62828,0.62828 0.34555,0 0.5576,-0.21204 0.47121,-0.4712 z m 1.87658,1.06642 v -2.57927 h 1.24105 c 1.62016,0 2.46965,0.95519 1.80128,2.02541 -0.34808,0.55737 -0.36506,0.98757 -0.0614,1.55502 0.79588,1.48712 1.2917,0.87966 1.10636,-1.35545 l -0.17746,-2.13992 2.70757,-0.0412 2.7076,-0.0412 -0.046,1.08991 c -0.0283,0.67139 -0.11571,0.82326 -0.22749,0.3955 -0.39707,-1.51943 -0.97066,-0.59866 -0.86517,1.38883 0.0968,1.82423 0.0164,2.08326 -0.64695,2.08326 -0.66005,0 -0.75074,-0.28081 -0.70483,-2.18246 0.029,-1.20035 -0.0368,-1.86996 -0.14634,-1.48804 -0.24325,0.84864 -0.93448,0.92203 -0.93448,0.0992 0,-0.32737 -0.17856,-0.59521 -0.3968,-0.59521 -0.5214,0 -0.51554,3.05427 0.006,3.37688 0.73675,0.45534 -0.0406,0.99803 -1.29294,0.90261 -0.8775,-0.0668 -1.41482,-0.4115 -1.85877,-1.19224 -0.34345,-0.604 -0.75837,-1.09931 -0.92206,-1.10069 -0.44372,-0.004 -0.35962,1.10275 0.10567,1.39032 0.55928,0.34566 0.0884,0.98803 -0.72431,0.98803 -0.5613,0 -0.67099,-0.42166 -0.67099,-2.57926 z m 2.30262,-1.185 c 0.0431,-0.21525 -0.23425,-0.45155 -0.61618,-0.5251 -0.43434,-0.0837 -0.69441,0.11097 -0.69441,0.51967 0,0.69037 1.17269,0.69523 1.31059,0.005 z m 7.63457,3.39487 c -0.12556,-0.20316 -0.0468,-0.48155 0.17499,-0.61864 0.53608,-0.33131 0.5208,-3.37687 -0.017,-3.37687 -0.23113,0 -0.30987,-0.17857 -0.17498,-0.39681 0.13488,-0.21825 0.54718,-0.39682 0.91624,-0.39682 0.5613,0 0.67099,0.42166 0.67099,2.57927 0,2.15761 -0.10969,2.57927 -0.67099,2.57927 -0.36906,0 -0.77374,-0.16624 -0.8993,-0.3694 z m 2.85993,0.0959 c -0.38193,-0.0998 -0.69442,-0.5255 -0.69442,-0.94599 0,-0.93777 0.35267,-0.97659 0.98728,-0.10869 0.26376,0.36071 0.68522,0.52874 0.93657,0.37339 0.75483,-0.46651 0.52424,-0.9051 -0.7543,-1.43469 -0.97399,-0.40344 -1.18778,-0.7044 -1.09122,-1.53617 0.0939,-0.8089 0.36853,-1.06283 1.25965,-1.16467 1.34303,-0.15347 2.22311,0.49755 1.56384,1.15682 -0.31064,0.31064 -0.50601,0.31064 -0.698,0 -0.33128,-0.53602 -1.4102,-0.57027 -1.4102,-0.0447 0,0.21264 0.53569,0.66364 1.19043,1.00222 1.23722,0.63979 1.53436,1.6798 0.71426,2.4999 -0.48797,0.48797 -0.79372,0.51889 -2.00389,0.20264 z m 3.07527,-2.30573 c 0,-2.20248 0.10255,-2.57927 0.70198,-2.57927 0.55063,0 0.6483,0.21388 0.45299,0.99203 -0.21791,0.86825 -0.11984,0.99202 0.78606,0.99202 1.0381,0 1.381,-0.53297 0.63824,-0.99202 -0.70222,-0.434 -0.42325,-0.99202 0.49601,-0.99217 0.83516,-1.4e-4 0.88862,0.15572 0.82781,2.4128 -0.0724,2.6869 -0.1961,2.95899 -1.17466,2.58349 -0.51727,-0.19851 -0.56852,-0.3706 -0.21552,-0.72361 0.77558,-0.77556 0.5211,-1.49486 -0.52886,-1.49486 -1.00074,0 -1.38219,0.90244 -0.58874,1.39282 0.55928,0.34566 0.0884,0.98804 -0.7243,0.98804 -0.56131,0 -0.67101,-0.42166 -0.67101,-2.57927 z m 5.9691,2.20987 c -0.12556,-0.20316 -0.0468,-0.48155 0.17498,-0.61864 0.52201,-0.32261 0.52787,-3.37687 0.006,-3.37687 -0.21824,0 -0.39681,-0.17857 -0.39681,-0.39681 0,-0.61611 2.62207,-0.46721 3.15868,0.17935 0.263,0.3169 0.36688,0.92685 0.23085,1.35545 -0.13603,0.42859 -0.0615,0.89412 0.16562,1.03448 0.57971,0.35829 0.51454,0.84373 -0.21061,1.56888 -0.67905,0.67906 -2.76202,0.84824 -3.12918,0.25416 z m 2.49221,-1.34993 c 0.076,-0.39156 -0.12648,-0.66153 -0.49601,-0.66153 -0.36809,0 -0.62431,0.33927 -0.62431,0.82668 0,0.96704 0.92725,0.83036 1.12032,-0.16515 z m -0.0208,-1.92636 c -0.24525,-0.73578 -1.09949,-0.85782 -1.09949,-0.15708 0,0.34556 0.28272,0.62828 0.62828,0.62828 0.34556,0 0.55761,-0.21204 0.47121,-0.4712 z m 1.49672,3.27629 c -0.12557,-0.20316 -0.0468,-0.48155 0.17499,-0.61864 0.522,-0.32261 0.52786,-3.37687 0.006,-3.37687 -0.21825,0 -0.39681,-0.17857 -0.39681,-0.39681 0,-0.62957 2.65744,-0.46035 3.32982,0.21202 0.47444,0.47445 0.51548,0.81375 0.18592,1.53705 -0.30711,0.67403 -0.29427,1.16857 0.0468,1.80601 0.56659,1.05866 0.13533,1.67626 -0.51978,0.74437 -0.25497,-0.36268 -0.69395,-0.98737 -0.97553,-1.38821 -0.45257,-0.64426 -0.48825,-0.5792 -0.30753,0.56084 0.17079,1.07737 0.0793,1.28964 -0.55584,1.28964 -0.41815,0 -0.86302,-0.16624 -0.98858,-0.3694 z m 2.56232,-3.4003 c 0,-0.32737 -0.26785,-0.59521 -0.59522,-0.59521 -0.32736,0 -0.59521,0.26784 -0.59521,0.59521 0,0.32737 0.26785,0.59521 0.59521,0.59521 0.32737,0 0.59522,-0.26784 0.59522,-0.59521 z m 2.4593,3.07527 c -1.24467,-1.07622 -1.39567,-2.21183 -0.45341,-3.40973 1.35279,-1.71979 3.62945,-1.19978 4.14537,0.94685 0.16861,0.7015 -0.015,1.33668 -0.60229,2.08325 -0.9774,1.24255 -1.95305,1.36243 -3.08967,0.37963 z m 2.22306,-0.57537 c 1.20062,-1.20062 -0.0684,-3.69396 -1.44194,-2.83318 -0.83225,0.52155 -1.06972,1.98279 -0.44463,2.73598 0.57933,0.69805 1.25111,0.73266 1.88657,0.0972 z m 1.5987,1.06963 c -0.12516,-0.12517 0.11277,-0.89024 0.52877,-1.70016 0.42676,-0.83088 0.66076,-1.86162 0.53699,-2.36538 -0.19018,-0.77405 -0.0633,-0.89283 0.95397,-0.89283 0.8704,0 1.16147,0.17929 1.12741,0.69442 -0.0705,1.06596 0.89852,3.67049 1.36557,3.67049 0.26065,0 0.34781,-0.81235 0.23419,-2.18245 l -0.18099,-2.18246 h 1.45919 c 1.77784,0 2.77261,0.96892 2.77261,2.70057 0,1.7641 -1.30783,2.53648 -4.03121,2.38075 -1.96643,-0.11244 -2.10996,-0.18813 -1.98925,-1.04905 0.10077,-0.71888 -0.0333,-0.89617 -0.59522,-0.78714 -0.40916,0.0794 -0.72561,0.48153 -0.72601,0.92257 -7.9e-4,0.74465 -0.97366,1.27301 -1.45602,0.79067 z m 7.93535,-2.14653 c 0.15985,-1.07434 -0.57304,-2.01821 -1.56708,-2.01821 -0.59926,0 -0.74504,0.2976 -0.74504,1.5211 0,0.8366 0.10681,1.62791 0.23735,1.75845 0.47858,0.47858 1.9489,-0.41528 2.07477,-1.26134 z m -5.48659,-0.82779 c 0,-0.21824 -0.0787,-0.39681 -0.17499,-0.39681 -0.0962,0 -0.28534,0.17857 -0.42023,0.39681 -0.13488,0.21825 -0.0561,0.39681 0.17499,0.39681 0.23112,0 0.42023,-0.17856 0.42023,-0.39681 z m 7.55484,2.30604 c -1.77597,-1.90628 -0.41902,-4.33128 2.36266,-4.22228 1.19561,0.0468 1.58998,0.22661 1.58998,0.72474 0,1.03688 -0.46758,1.25046 -1.22899,0.56139 -1.04194,-0.94294 -2.34229,-0.38496 -2.34229,1.00507 0,1.66829 0.93062,2.26741 2.21489,1.42592 1.33513,-0.87481 1.83809,-0.375 0.61802,0.61414 -1.22594,0.99388 -2.21814,0.96024 -3.21427,-0.10898 z m 3.88475,0.66828 c -0.12517,-0.12517 0.11277,-0.89024 0.52876,-1.70016 0.42677,-0.83088 0.66077,-1.86162 0.53699,-2.36538 -0.18937,-0.77076 -0.0623,-0.89283 0.92903,-0.89283 0.92529,0 1.1491,0.17346 1.15207,0.89283 0.005,1.0996 1.20788,3.95641 1.25359,2.97607 0.0397,-0.85173 0.56301,-0.89418 1.22279,-0.0992 0.6358,0.7661 1.19043,0.76153 1.19043,-0.01 0,-0.33277 -0.42206,-0.7655 -0.93791,-0.96163 -1.98594,-0.75506 -1.55537,-2.79825 0.58968,-2.79825 0.87731,0 1.14185,0.18387 1.14185,0.79363 0,0.89945 -0.4115,1.01701 -1.11107,0.31745 -0.34586,-0.34587 -0.59543,-0.35692 -0.91199,-0.0403 -0.31655,0.31655 -0.12653,0.58341 0.69442,0.97512 0.75098,0.35833 1.17127,0.89303 1.25251,1.59353 0.14164,1.22121 -0.38455,1.45453 -3.09835,1.37385 -1.6323,-0.0486 -1.77448,-0.13277 -1.65556,-0.98096 0.10078,-0.71887 -0.0333,-0.89616 -0.59522,-0.78713 -0.40915,0.0794 -0.7256,0.48153 -0.72601,0.92258 -7.9e-4,0.74463 -0.97366,1.273 -1.45601,0.79067 z m 2.44875,-2.97432 c 0,-0.21824 -0.0787,-0.39681 -0.17498,-0.39681 -0.0962,0 -0.28535,0.17857 -0.42023,0.39681 -0.13489,0.21825 -0.0561,0.39681 0.17498,0.39681 0.23113,0 0.42023,-0.17856 0.42023,-0.39681 z m 6.71051,2.90597 c -0.0194,-0.17968 -0.0322,-1.21952 -0.0284,-2.31075 0.004,-1.09123 -0.0828,-1.67156 -0.19224,-1.28963 -0.29793,1.03943 -0.93447,0.8367 -0.93447,-0.29761 0,-0.9112 0.1455,-0.99203 1.78564,-0.99203 1.64016,0 1.78566,0.0808 1.78566,0.99203 0,1.13431 -0.63654,1.33704 -0.93448,0.29761 -0.10946,-0.38193 -0.17537,0.28681 -0.14645,1.4861 0.0425,1.76477 -0.0764,2.20535 -0.62368,2.31075 -0.37194,0.0716 -0.69212,-0.0168 -0.71152,-0.19647 z m 3.00649,-0.13613 c -0.11358,-0.18378 -0.025,-0.4463 0.19678,-0.58339 0.522,-0.32261 0.52786,-3.37687 0.006,-3.37687 -0.21825,0 -0.39681,-0.17857 -0.39681,-0.39681 0,-0.21825 0.79341,-0.39682 1.76314,-0.39682 1.64535,0 1.83319,0.11269 2.81132,1.68645 l 1.04816,1.68643 -0.19429,-1.68643 c -0.18092,-1.5704 -0.12863,-1.68645 0.75998,-1.68645 0.52484,0 0.95426,0.17857 0.95426,0.39682 0,0.21824 -0.17856,0.39681 -0.39681,0.39681 -0.21824,0 -0.39681,0.88228 -0.39681,1.96063 0,1.07834 -0.1685,2.06476 -0.37445,2.19205 -0.20596,0.12728 -0.87557,-0.62108 -1.48804,-1.66302 -0.97205,-1.65368 -1.13017,-1.77731 -1.24417,-0.97277 -0.0719,0.50693 -0.05,1.1319 0.0487,1.38883 0.0986,0.25694 0.24664,0.64573 0.32899,0.86397 0.18151,0.48106 -3.13294,0.66541 -3.42641,0.19057 z m 2.50772,-2.30466 c 0.0948,-1.2865 -0.0158,-1.6556 -0.49601,-1.6556 -0.4696,0 -0.61803,0.43677 -0.61803,1.8187 0,2.34199 0.93956,2.20442 1.11404,-0.1631 z m 5.26371,1.66376 c -1.03337,-1.31374 -1.04281,-2.30535 -0.0315,-3.31661 1.02515,-1.02516 3.97084,-1.028 3.97084,-0.004 0,1.03688 -0.46757,1.25047 -1.22899,0.56139 -0.44241,-0.40037 -1.00761,-0.53363 -1.54285,-0.36375 -0.66085,0.20974 -0.81815,0.53264 -0.72285,1.48378 0.16297,1.62643 1.25251,2.31915 2.18345,1.38821 0.42635,-0.42635 0.50458,-0.68769 0.20584,-0.68769 -0.265,0 -0.48183,-0.17857 -0.48183,-0.39681 0,-0.21824 0.35713,-0.39681 0.79362,-0.39681 1.0143,0 1.05367,1.22889 0.0679,2.12096 -1.05403,0.95388 -2.27353,0.80633 -3.21364,-0.38883 z m 6.80527,0.42783 c -1.10605,-0.77471 -1.19903,-2.9404 -0.16637,-3.87495 1.0212,-0.92417 3.64936,-0.78585 3.64936,0.19205 0,0.85791 -0.0535,0.86871 -1.35841,0.27417 -1.23524,-0.56281 -2.21288,0.0918 -2.21288,1.4818 0,1.30735 1.41948,2.02585 2.34591,1.18743 1.23755,-1.11995 1.78638,-0.45089 0.60182,0.73366 -0.79038,0.79038 -1.73659,0.79231 -2.85943,0.005 z m 4.71946,-0.40591 c -1.04677,-1.33075 -1.04926,-1.77736 -0.0172,-3.08936 1.98453,-2.52293 5.55975,0.29368 3.64432,2.87104 -1.09024,1.46701 -2.57458,1.55635 -3.62708,0.21832 z m 2.65227,-0.24617 c 1.20063,-1.20062 -0.0684,-3.69396 -1.44194,-2.83318 -0.83225,0.52155 -1.06972,1.98279 -0.44462,2.73598 0.57932,0.69805 1.25111,0.73266 1.88656,0.0972 z m 1.89553,0.92237 c -0.13303,-0.21524 -0.0604,-0.50352 0.16141,-0.64061 0.52055,-0.32171 0.52572,-2.85756 0.006,-3.17847 -1.23766,-0.76492 0.88187,-1.39006 2.54681,-0.75116 0.67175,0.25777 0.88605,2.13999 0.24364,2.13999 -0.23156,0 -0.2529,0.35446 -0.0537,0.89283 0.18165,0.49105 0.57767,0.89282 0.88003,0.89282 0.67913,0 0.9853,-2.50085 0.38026,-3.10589 -0.74394,-0.74396 -0.46485,-1.06062 0.93479,-1.06062 1.16331,0 2.6076,0.79939 2.6076,1.44327 0,0.71642 -0.95321,1.73122 -1.62614,1.73122 -0.60665,0 -0.77406,0.21966 -0.68046,0.89282 0.1071,0.77026 -0.0576,0.89462 -1.19982,0.90591 -1.05358,0.0104 -1.4406,-0.21244 -1.89504,-1.09123 -0.72355,-1.3992 -1.03988,-1.40657 -0.87669,-0.0204 0.0895,0.75987 -0.0689,1.12229 -0.52982,1.2124 -0.36158,0.0707 -0.76626,-0.0476 -0.8993,-0.26283 z m 6.51684,-3.22387 c 0,-0.44089 -0.26454,-0.79361 -0.59522,-0.79361 -0.33067,0 -0.59521,0.35272 -0.59521,0.79361 0,0.4409 0.26454,0.79362 0.59521,0.79362 0.33068,0 0.59522,-0.35272 0.59522,-0.79362 z m -4.05904,-0.0744 c -0.24526,-0.73577 -1.09949,-0.85782 -1.09949,-0.15707 0,0.34555 0.28273,0.62828 0.62828,0.62828 0.34556,0 0.5576,-0.21205 0.47121,-0.47121 z m 6.07189,2.60015 c -0.95013,-1.2079 -0.98666,-1.47228 -0.36621,-2.65104 0.57319,-1.08897 1.1063,-1.44817 2.16075,-1.45588 2.04021,-0.0149 2.99551,3.1071 1.35678,4.43406 -1.23159,0.99729 -2.18759,0.89803 -3.15132,-0.32714 z m 2.37815,-0.15886 c 0.92795,-0.49662 1.00641,-2.07146 0.13905,-2.79131 -1.29833,-1.07752 -2.85364,1.27994 -1.73426,2.62871 0.56756,0.68387 0.61264,0.68846 1.59521,0.1626 z m 2.3385,1.10519 c -0.009,-0.0545 -0.0536,-1.21529 -0.0992,-2.57941 -0.0817,-2.44346 -0.0673,-2.4802 0.97583,-2.48006 0.58233,8e-5 1.34123,0.10853 1.68644,0.24101 0.67967,0.26081 0.88239,2.14 0.23087,2.14 -0.55633,0 -0.49396,0.51051 0.17252,1.41219 0.54194,0.73319 0.60007,0.69724 1.20793,-0.7469 0.35122,-0.83445 0.52939,-1.86119 0.39594,-2.28166 -0.20478,-0.64518 -0.0461,-0.76449 1.01698,-0.76449 0.98987,0 1.20763,0.13551 1.01681,0.63277 -0.13355,0.34802 0.1152,1.44211 0.55276,2.4313 0.98365,2.22371 0.98591,2.17668 -0.0973,2.02285 -0.67082,-0.0953 -0.86195,-0.3488 -0.76867,-1.01962 0.0952,-0.68482 -0.0724,-0.89282 -0.71937,-0.89282 -0.64698,0 -0.81457,0.208 -0.71935,0.89282 0.10488,0.7543 -0.0598,0.89282 -1.06094,0.89282 -0.90149,0 -1.31024,-0.26114 -1.70809,-1.09122 -0.28766,-0.60018 -0.69184,-1.09123 -0.89818,-1.09123 -0.50218,0 -0.4804,1.07855 0.0281,1.39283 0.52665,0.32549 0.10747,0.98803 -0.6251,0.98803 -0.31449,0 -0.57912,-0.0446 -0.58807,-0.0992 z m 5.96841,-3.07527 c 0,-0.21825 -0.0787,-0.39682 -0.17498,-0.39682 -0.0962,0 -0.28535,0.17857 -0.42024,0.39682 -0.13488,0.21825 -0.0561,0.39681 0.17499,0.39681 0.23113,0 0.42023,-0.17856 0.42023,-0.39681 z m -3.94713,-0.59522 c -0.0311,-0.58898 -0.91887,-0.48078 -1.12483,0.1371 -0.11126,0.33377 0.0701,0.48252 0.48391,0.39681 0.36403,-0.0754 0.65244,-0.31566 0.64092,-0.53391 z m 6.54335,3.40031 c -0.12557,-0.20317 -0.0468,-0.48156 0.17498,-0.61864 0.52201,-0.32261 0.52787,-3.37688 0.006,-3.37688 -0.21824,0 -0.39681,0.26784 -0.39681,0.59521 0,0.32738 -0.17856,0.59522 -0.3968,0.59522 -0.21825,0 -0.39681,-0.44358 -0.39681,-0.98574 0,-0.96486 0.063,-0.98508 2.97607,-0.95513 2.74511,0.0282 3.57493,0.33349 2.57926,0.94885 -0.5478,0.33856 -0.49975,2.7144 0.0664,3.28051 0.35302,0.353 0.30176,0.52509 -0.21551,0.7236 -0.99753,0.38279 -1.19726,-0.023 -1.14512,-2.32694 0.0258,-1.14069 -0.0426,-1.7615 -0.15211,-1.37957 -0.24325,0.84864 -0.93447,0.92203 -0.93447,0.0992 0,-0.32737 -0.20067,-0.59521 -0.44594,-0.59521 -0.29795,0 -0.38588,0.72434 -0.26497,2.18246 0.15699,1.89293 0.0876,2.18245 -0.52265,2.18245 -0.38701,0 -0.80638,-0.16623 -0.93195,-0.36939 z m 5.73679,-0.42423 c -1.54803,-1.54804 -0.43536,-4.36491 1.72415,-4.36491 2.11368,0 3.10874,3.31738 1.36204,4.54081 -1.18697,0.83139 -2.13281,0.77748 -3.08619,-0.1759 z m 2.40695,-0.41078 c 1.56734,-0.83881 0.53043,-3.51657 -1.15463,-2.98175 -1.02036,0.32385 -1.30323,1.55602 -0.59074,2.57324 0.66191,0.94501 0.71827,0.9582 1.74537,0.40851 z m 2.15637,-1.37487 c 0,-2.18035 0.10614,-2.57926 0.68635,-2.57926 0.40267,0 1.05589,0.69701 1.58047,1.68644 l 0.8941,1.68644 0.1408,-1.17882 c 0.0774,-0.64836 -0.0534,-1.24358 -0.29084,-1.3227 -0.78988,-0.26329 -0.44526,-0.87136 0.49385,-0.87136 0.8826,0 0.91728,0.10569 0.74882,2.28166 -0.0972,1.25491 -0.32115,2.43738 -0.49777,2.62773 -0.1766,0.19034 -0.86732,-0.52392 -1.53489,-1.58725 l -1.21379,-1.93331 -0.007,1.48804 c -0.005,0.81842 0.18157,1.48804 0.41269,1.48804 0.23113,0 0.30987,0.17856 0.17499,0.39681 -0.13489,0.21824 -0.5472,0.39681 -0.91625,0.39681 -0.5613,0 -0.67099,-0.42166 -0.67099,-2.57927 z m 20.84152,-0.1894 c -1.20977,-1.20977 -0.38887,-2.76778 1.46508,-2.7806 1.70589,-0.0118 2.06711,2.33505 0.48937,3.17943 -0.97144,0.5199 -1.05221,0.50341 -1.95445,-0.39883 z m 17.85172,-0.20226 c -0.67246,-0.81026 -0.18473,-2.47366 0.8187,-2.79213 0.94835,-0.301 2.35149,0.7594 2.35149,1.7771 0,1.49025 -2.19304,2.19243 -3.17019,1.01503 z"
         id="path1005" />
    </g>
    <script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  </g>
  <script
     id="script1"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
